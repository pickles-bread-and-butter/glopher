// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.12.4
// source: glotos.proto

package protos

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InputType int32

const (
	InputType_STRING InputType = 0
	InputType_INT    InputType = 1
	InputType_FLOAT  InputType = 2
	InputType_BOOL   InputType = 3
)

// Enum value maps for InputType.
var (
	InputType_name = map[int32]string{
		0: "STRING",
		1: "INT",
		2: "FLOAT",
		3: "BOOL",
	}
	InputType_value = map[string]int32{
		"STRING": 0,
		"INT":    1,
		"FLOAT":  2,
		"BOOL":   3,
	}
)

func (x InputType) Enum() *InputType {
	p := new(InputType)
	*p = x
	return p
}

func (x InputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputType) Descriptor() protoreflect.EnumDescriptor {
	return file_glotos_proto_enumTypes[0].Descriptor()
}

func (InputType) Type() protoreflect.EnumType {
	return &file_glotos_proto_enumTypes[0]
}

func (x InputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputType.Descriptor instead.
func (InputType) EnumDescriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{0}
}

type FunctionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          InputType              `protobuf:"varint,2,opt,name=Type,proto3,enum=InputType" json:"Type,omitempty"`
	Default       string                 `protobuf:"bytes,3,opt,name=Default,proto3" json:"Default,omitempty"`
	InputHelp     string                 `protobuf:"bytes,4,opt,name=InputHelp,proto3" json:"InputHelp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionInput) Reset() {
	*x = FunctionInput{}
	mi := &file_glotos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionInput) ProtoMessage() {}

func (x *FunctionInput) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionInput.ProtoReflect.Descriptor instead.
func (*FunctionInput) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{0}
}

func (x *FunctionInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionInput) GetType() InputType {
	if x != nil {
		return x.Type
	}
	return InputType_STRING
}

func (x *FunctionInput) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *FunctionInput) GetInputHelp() string {
	if x != nil {
		return x.InputHelp
	}
	return ""
}

type PluginCommand struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CommandName       string                 `protobuf:"bytes,1,opt,name=CommandName,proto3" json:"CommandName,omitempty"`
	FunctionInputDefs []*FunctionInput       `protobuf:"bytes,2,rep,name=FunctionInputDefs,proto3" json:"FunctionInputDefs,omitempty"`
	SubCommands       []*PluginCommand       `protobuf:"bytes,3,rep,name=SubCommands,proto3" json:"SubCommands,omitempty"`
	CommandHelp       *string                `protobuf:"bytes,4,opt,name=CommandHelp,proto3,oneof" json:"CommandHelp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PluginCommand) Reset() {
	*x = PluginCommand{}
	mi := &file_glotos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCommand) ProtoMessage() {}

func (x *PluginCommand) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCommand.ProtoReflect.Descriptor instead.
func (*PluginCommand) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{1}
}

func (x *PluginCommand) GetCommandName() string {
	if x != nil {
		return x.CommandName
	}
	return ""
}

func (x *PluginCommand) GetFunctionInputDefs() []*FunctionInput {
	if x != nil {
		return x.FunctionInputDefs
	}
	return nil
}

func (x *PluginCommand) GetSubCommands() []*PluginCommand {
	if x != nil {
		return x.SubCommands
	}
	return nil
}

func (x *PluginCommand) GetCommandHelp() string {
	if x != nil && x.CommandHelp != nil {
		return *x.CommandHelp
	}
	return ""
}

type PluginDefintion struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PluginName     string                 `protobuf:"bytes,1,opt,name=PluginName,proto3" json:"PluginName,omitempty"`
	PluginUUID     int64                  `protobuf:"varint,2,opt,name=PluginUUID,proto3" json:"PluginUUID,omitempty"`
	PluginCommands []*PluginCommand       `protobuf:"bytes,3,rep,name=PluginCommands,proto3" json:"PluginCommands,omitempty"`
	Address        *string                `protobuf:"bytes,4,opt,name=Address,proto3,oneof" json:"Address,omitempty"`
	BinaryLoc      *string                `protobuf:"bytes,5,opt,name=BinaryLoc,proto3,oneof" json:"BinaryLoc,omitempty"`
	GitSha         string                 `protobuf:"bytes,6,opt,name=GitSha,proto3" json:"GitSha,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PluginDefintion) Reset() {
	*x = PluginDefintion{}
	mi := &file_glotos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginDefintion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDefintion) ProtoMessage() {}

func (x *PluginDefintion) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDefintion.ProtoReflect.Descriptor instead.
func (*PluginDefintion) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{2}
}

func (x *PluginDefintion) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *PluginDefintion) GetPluginUUID() int64 {
	if x != nil {
		return x.PluginUUID
	}
	return 0
}

func (x *PluginDefintion) GetPluginCommands() []*PluginCommand {
	if x != nil {
		return x.PluginCommands
	}
	return nil
}

func (x *PluginDefintion) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *PluginDefintion) GetBinaryLoc() string {
	if x != nil && x.BinaryLoc != nil {
		return *x.BinaryLoc
	}
	return ""
}

func (x *PluginDefintion) GetGitSha() string {
	if x != nil {
		return x.GitSha
	}
	return ""
}

type Manifest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Plugins       map[string]*PluginDefintion `protobuf:"bytes,1,rep,name=Plugins,proto3" json:"Plugins,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	mi := &file_glotos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{3}
}

func (x *Manifest) GetPlugins() map[string]*PluginDefintion {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type PluginGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginName    string                 `protobuf:"bytes,1,opt,name=PluginName,proto3" json:"PluginName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginGetRequest) Reset() {
	*x = PluginGetRequest{}
	mi := &file_glotos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGetRequest) ProtoMessage() {}

func (x *PluginGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGetRequest.ProtoReflect.Descriptor instead.
func (*PluginGetRequest) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{4}
}

func (x *PluginGetRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

type PluginGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginDef     *PluginDefintion       `protobuf:"bytes,1,opt,name=PluginDef,proto3" json:"PluginDef,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginGetResponse) Reset() {
	*x = PluginGetResponse{}
	mi := &file_glotos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGetResponse) ProtoMessage() {}

func (x *PluginGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGetResponse.ProtoReflect.Descriptor instead.
func (*PluginGetResponse) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{5}
}

func (x *PluginGetResponse) GetPluginDef() *PluginDefintion {
	if x != nil {
		return x.PluginDef
	}
	return nil
}

type PluginListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginNames   []string               `protobuf:"bytes,1,rep,name=PluginNames,proto3" json:"PluginNames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginListResponse) Reset() {
	*x = PluginListResponse{}
	mi := &file_glotos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginListResponse) ProtoMessage() {}

func (x *PluginListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginListResponse.ProtoReflect.Descriptor instead.
func (*PluginListResponse) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{6}
}

func (x *PluginListResponse) GetPluginNames() []string {
	if x != nil {
		return x.PluginNames
	}
	return nil
}

type PluginRegisterRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PluginServiceDefinition *PluginDefintion       `protobuf:"bytes,1,opt,name=PluginServiceDefinition,proto3" json:"PluginServiceDefinition,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PluginRegisterRequest) Reset() {
	*x = PluginRegisterRequest{}
	mi := &file_glotos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRegisterRequest) ProtoMessage() {}

func (x *PluginRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRegisterRequest.ProtoReflect.Descriptor instead.
func (*PluginRegisterRequest) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{7}
}

func (x *PluginRegisterRequest) GetPluginServiceDefinition() *PluginDefintion {
	if x != nil {
		return x.PluginServiceDefinition
	}
	return nil
}

type PluginRegisterResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ReponseCode        int32                  `protobuf:"varint,1,opt,name=ReponseCode,proto3" json:"ReponseCode,omitempty"`
	PluginAssignedUUID int32                  `protobuf:"varint,2,opt,name=PluginAssignedUUID,proto3" json:"PluginAssignedUUID,omitempty"`
	ReponseString      string                 `protobuf:"bytes,3,opt,name=ReponseString,proto3" json:"ReponseString,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PluginRegisterResponse) Reset() {
	*x = PluginRegisterResponse{}
	mi := &file_glotos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRegisterResponse) ProtoMessage() {}

func (x *PluginRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRegisterResponse.ProtoReflect.Descriptor instead.
func (*PluginRegisterResponse) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{8}
}

func (x *PluginRegisterResponse) GetReponseCode() int32 {
	if x != nil {
		return x.ReponseCode
	}
	return 0
}

func (x *PluginRegisterResponse) GetPluginAssignedUUID() int32 {
	if x != nil {
		return x.PluginAssignedUUID
	}
	return 0
}

func (x *PluginRegisterResponse) GetReponseString() string {
	if x != nil {
		return x.ReponseString
	}
	return ""
}

type PluginUnaryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClientCommandFile []byte                 `protobuf:"bytes,1,opt,name=ClientCommandFile,proto3" json:"ClientCommandFile,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PluginUnaryRequest) Reset() {
	*x = PluginUnaryRequest{}
	mi := &file_glotos_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginUnaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginUnaryRequest) ProtoMessage() {}

func (x *PluginUnaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginUnaryRequest.ProtoReflect.Descriptor instead.
func (*PluginUnaryRequest) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{9}
}

func (x *PluginUnaryRequest) GetClientCommandFile() []byte {
	if x != nil {
		return x.ClientCommandFile
	}
	return nil
}

type PluginUnaryResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ServerResponseFile []byte                 `protobuf:"bytes,1,opt,name=ServerResponseFile,proto3" json:"ServerResponseFile,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PluginUnaryResponse) Reset() {
	*x = PluginUnaryResponse{}
	mi := &file_glotos_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginUnaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginUnaryResponse) ProtoMessage() {}

func (x *PluginUnaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginUnaryResponse.ProtoReflect.Descriptor instead.
func (*PluginUnaryResponse) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{10}
}

func (x *PluginUnaryResponse) GetServerResponseFile() []byte {
	if x != nil {
		return x.ServerResponseFile
	}
	return nil
}

type PluginRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginName    string                 `protobuf:"bytes,1,opt,name=PluginName,proto3" json:"PluginName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginRemoveRequest) Reset() {
	*x = PluginRemoveRequest{}
	mi := &file_glotos_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRemoveRequest) ProtoMessage() {}

func (x *PluginRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRemoveRequest.ProtoReflect.Descriptor instead.
func (*PluginRemoveRequest) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{11}
}

func (x *PluginRemoveRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

type PluginRemoveResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResponseString string                 `protobuf:"bytes,1,opt,name=ResponseString,proto3" json:"ResponseString,omitempty"`
	PluginUUID     int32                  `protobuf:"varint,2,opt,name=PluginUUID,proto3" json:"PluginUUID,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PluginRemoveResponse) Reset() {
	*x = PluginRemoveResponse{}
	mi := &file_glotos_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRemoveResponse) ProtoMessage() {}

func (x *PluginRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_glotos_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRemoveResponse.ProtoReflect.Descriptor instead.
func (*PluginRemoveResponse) Descriptor() ([]byte, []int) {
	return file_glotos_proto_rawDescGZIP(), []int{12}
}

func (x *PluginRemoveResponse) GetResponseString() string {
	if x != nil {
		return x.ResponseString
	}
	return ""
}

func (x *PluginRemoveResponse) GetPluginUUID() int32 {
	if x != nil {
		return x.PluginUUID
	}
	return 0
}

var File_glotos_proto protoreflect.FileDescriptor

var file_glotos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x0d, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x11,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x11, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x53, 0x75,
	0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x0b, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x65, 0x6c, 0x70,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48,
	0x65, 0x6c, 0x70, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x0e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x0e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x53, 0x68, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x47, 0x69, 0x74, 0x53, 0x68, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x4c, 0x6f, 0x63, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x32, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x22, 0x36, 0x0a, 0x12, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x63, 0x0a, 0x15, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x17, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x12, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x45, 0x0a,
	0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x55, 0x49, 0x44, 0x2a, 0x35, 0x0a, 0x09, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c,
	0x10, 0x03, 0x32, 0xfa, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x46, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x55, 0x6e, 0x61,
	0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x2f, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x69, 0x73, 0x61, 0x61, 0x6b, 0x2e, 0x77, 0x69, 0x6c, 0x6c, 0x65, 0x74, 0x74, 0x2f,
	0x63, 0x6f, 0x64, 0x65, 0x2f, 0x67, 0x6c, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x67, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_glotos_proto_rawDescOnce sync.Once
	file_glotos_proto_rawDescData = file_glotos_proto_rawDesc
)

func file_glotos_proto_rawDescGZIP() []byte {
	file_glotos_proto_rawDescOnce.Do(func() {
		file_glotos_proto_rawDescData = protoimpl.X.CompressGZIP(file_glotos_proto_rawDescData)
	})
	return file_glotos_proto_rawDescData
}

var file_glotos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_glotos_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_glotos_proto_goTypes = []any{
	(InputType)(0),                 // 0: InputType
	(*FunctionInput)(nil),          // 1: FunctionInput
	(*PluginCommand)(nil),          // 2: PluginCommand
	(*PluginDefintion)(nil),        // 3: PluginDefintion
	(*Manifest)(nil),               // 4: Manifest
	(*PluginGetRequest)(nil),       // 5: PluginGetRequest
	(*PluginGetResponse)(nil),      // 6: PluginGetResponse
	(*PluginListResponse)(nil),     // 7: PluginListResponse
	(*PluginRegisterRequest)(nil),  // 8: PluginRegisterRequest
	(*PluginRegisterResponse)(nil), // 9: PluginRegisterResponse
	(*PluginUnaryRequest)(nil),     // 10: PluginUnaryRequest
	(*PluginUnaryResponse)(nil),    // 11: PluginUnaryResponse
	(*PluginRemoveRequest)(nil),    // 12: PluginRemoveRequest
	(*PluginRemoveResponse)(nil),   // 13: PluginRemoveResponse
	nil,                            // 14: Manifest.PluginsEntry
	(*empty.Empty)(nil),            // 15: google.protobuf.Empty
}
var file_glotos_proto_depIdxs = []int32{
	0,  // 0: FunctionInput.Type:type_name -> InputType
	1,  // 1: PluginCommand.FunctionInputDefs:type_name -> FunctionInput
	2,  // 2: PluginCommand.SubCommands:type_name -> PluginCommand
	2,  // 3: PluginDefintion.PluginCommands:type_name -> PluginCommand
	14, // 4: Manifest.Plugins:type_name -> Manifest.PluginsEntry
	3,  // 5: PluginGetResponse.PluginDef:type_name -> PluginDefintion
	3,  // 6: PluginRegisterRequest.PluginServiceDefinition:type_name -> PluginDefintion
	3,  // 7: Manifest.PluginsEntry.value:type_name -> PluginDefintion
	5,  // 8: Registry.GetPlugin:input_type -> PluginGetRequest
	8,  // 9: Registry.RegisterPlugin:input_type -> PluginRegisterRequest
	12, // 10: Registry.RemovePlugin:input_type -> PluginRemoveRequest
	15, // 11: Registry.ListPlugins:input_type -> google.protobuf.Empty
	10, // 12: Plugin.UnaryCallPlugin:input_type -> PluginUnaryRequest
	6,  // 13: Registry.GetPlugin:output_type -> PluginGetResponse
	9,  // 14: Registry.RegisterPlugin:output_type -> PluginRegisterResponse
	13, // 15: Registry.RemovePlugin:output_type -> PluginRemoveResponse
	7,  // 16: Registry.ListPlugins:output_type -> PluginListResponse
	11, // 17: Plugin.UnaryCallPlugin:output_type -> PluginUnaryResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_glotos_proto_init() }
func file_glotos_proto_init() {
	if File_glotos_proto != nil {
		return
	}
	file_glotos_proto_msgTypes[1].OneofWrappers = []any{}
	file_glotos_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_glotos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_glotos_proto_goTypes,
		DependencyIndexes: file_glotos_proto_depIdxs,
		EnumInfos:         file_glotos_proto_enumTypes,
		MessageInfos:      file_glotos_proto_msgTypes,
	}.Build()
	File_glotos_proto = out.File
	file_glotos_proto_rawDesc = nil
	file_glotos_proto_goTypes = nil
	file_glotos_proto_depIdxs = nil
}
